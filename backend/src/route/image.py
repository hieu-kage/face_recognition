from fastapi import APIRouterfrom pydantic import BaseModelimport numpy as npimport cv2from src.services.utils import Attendanceimport base64router = APIRouter(prefix="/image", tags=["Image"])attendance = Attendance()class ImageRequest(BaseModel):    image_base64: str  # Ảnh gửi từ frontend dưới dạng base64@router.post("/predict")def predict(request: ImageRequest):    try:        image_data = base64.b64decode(request.image_base64.split(',')[-1])        np_arr = np.frombuffer(image_data, np.uint8)        frame = cv2.imdecode(np_arr, cv2.IMREAD_COLOR)        if frame is None:            return {"status": "fail", "message": "Không đọc được ảnh"}        user = attendance.recognize_face_from_image(frame)        if not user:            return {"status": "fail", "message": "Không nhận diện được khuôn mặt hoặc không trùng khớp"}        # Trả nguyên object user dưới dạng dict        return {            "status": "success",            "user": user.dict()        }    except Exception as e:        return {"status": "error", "message": str(e)}